
---

## ✅ WEEK-9 PROJECT: Full User Authentication (With Email/Phone Validation)

---

### 🧱 STEP 1: Create Folder Structure

#### 🔹 Project Name: `UserAuthApp`

```
UserAuthApp/
├── index.jsp              ← Login form (JSP + JS validation)
├── home.jsp               ← Protected page
├── logout.jsp             ← Logout logic
├── WEB-INF/
│   ├── web.xml            ← Servlet config
│   └── classes/
│       └── LoginServlet.java
```

---

### 🛠 STEP 2: Setup Files One by One

---

### 1️⃣ `index.jsp` – Login Page with JS Validation

```jsp
<%@ page session="true" %>
<html>
<head>
    <title>Login</title>
    <script>
    function validateForm() {
        let user = document.forms["loginForm"]["username"].value;
        let pass = document.forms["loginForm"]["password"].value;
        let emailPattern = /^[a-zA-Z0-9._%+-]+@gmail\.com$/;
        let phonePattern = /^\+91\d{10}$/;

        if (!emailPattern.test(user) && !phonePattern.test(user)) {
            alert("Enter valid Gmail or Indian phone number.");
            return false;
        }

        if (pass.length < 6) {
            alert("Password must be 6+ characters.");
            return false;
        }

        return true;
    }
    </script>
</head>
<body>
<h2>Login</h2>
<form name="loginForm" action="login" method="post" onsubmit="return validateForm()">
    Email/Phone: <input type="text" name="username"/><br>
    Password: <input type="password" name="password"/><br>
    <input type="submit" value="Login"/>
</form>
<% if (request.getAttribute("error") != null) { %>
    <p style="color:red;"><%= request.getAttribute("error") %></p>
<% } %>
</body>
</html>
```

---

### 2️⃣ `LoginServlet.java` – Servlet with Server-Side Validation

```java
import java.io.*;
import javax.servlet.*;
import javax.servlet.http.*;

public class LoginServlet extends HttpServlet {
    protected void doPost(HttpServletRequest request, HttpServletResponse response)
    throws ServletException, IOException {
        String username = request.getParameter("username");
        String password = request.getParameter("password");

        boolean isEmail = username.matches("^[a-zA-Z0-9._%+-]+@gmail\\.com$");
        boolean isPhone = username.matches("^\\+91\\d{10}$");

        if ((isEmail || isPhone) && password != null && password.length() >= 6) {
            if (("admin@gmail.com".equals(username) || "+911234567890".equals(username)) && "admin123".equals(password)) {
                HttpSession session = request.getSession();
                session.setAttribute("user", username);
                response.sendRedirect("home.jsp");
            } else {
                request.setAttribute("error", "Invalid credentials.");
                RequestDispatcher rd = request.getRequestDispatcher("index.jsp");
                rd.forward(request, response);
            }
        } else {
            request.setAttribute("error", "Invalid input format.");
            RequestDispatcher rd = request.getRequestDispatcher("index.jsp");
            rd.forward(request, response);
        }
    }
}
```

---

### 3️⃣ `home.jsp` – Protected Page

```jsp
<%@ page session="true" %>
<%
String user = (String) session.getAttribute("user");
if (user == null) {
    response.sendRedirect("index.jsp");
    return;
}
%>
<html>
<head><title>Welcome</title></head>
<body>
<h2>Welcome, <%= user %>!</h2>
<p>This page is protected.</p>
<a href="logout.jsp">Logout</a>
</body>
</html>
```

---

### 4️⃣ `logout.jsp` – Destroys Session

```jsp
<%
session.invalidate();
response.sendRedirect("index.jsp");
%>
```

---

### 5️⃣ `web.xml` – Servlet Mapping

📁 Place this in: `UserAuthApp/WEB-INF/web.xml`

```xml
<web-app>
  <servlet>
    <servlet-name>LoginServlet</servlet-name>
    <servlet-class>LoginServlet</servlet-class>
  </servlet>
  <servlet-mapping>
    <servlet-name>LoginServlet</servlet-name>
    <url-pattern>/login</url-pattern>
  </servlet-mapping>
</web-app>
```

---

## ⚙️ STEP 3: COMPILE SERVLET

### 🧾 A. Compile Servlet using `javac`

In terminal:

```bash
cd UserAuthApp/WEB-INF/classes
javac -cp "path-to-tomcat/lib/servlet-api.jar" LoginServlet.java
```

Example:

```bash
javac -cp "C:/Tomcat9/lib/servlet-api.jar" LoginServlet.java
```

It will generate `LoginServlet.class` in the same folder.

---

## 🚀 STEP 4: DEPLOY ON TOMCAT

1. Copy `UserAuthApp` folder into:

   ```
   C:\Tomcat9\webapps\
   ```

2. Start Tomcat Server (`startup.bat` in bin folder)

3. Visit in browser:

```
http://localhost:8080/UserAuthApp/index.jsp
```

---

## 🧪 TESTING

Try:

* ✅ Email: `admin@gmail.com`
* ✅ Mobile: `+911234567890`
* ✅ Password: `admin123`

Invalid credentials or format will show error messages.

---

## 🧠 Viva Tips

Say:

> "This project uses both client-side JavaScript and server-side regex validation. I’ve used session tracking to protect `home.jsp`, and servlet mapping is done using `web.xml`."

---

Would you like me to send you a **ready-to-run ZIP file** of this project?
